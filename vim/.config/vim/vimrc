" General
set number	" Show line numbers
set relativenumber
set showbreak=+++ 	" Wrap-broken line prefix
set showmatch	" Highlight matching brace
set noshowmode
 
set hlsearch	" Highlight all search results
set smartcase	" Enable smart-case search
set ignorecase	" Always case-insensitive
set incsearch	" Searches for strings incrementally
 
set autoindent	" Auto-indent new lines
set shiftwidth=2	" Number of auto-indent spaces
set smartindent	" Enable smart-indent
set smarttab	" Enable smart-tabs
set softtabstop=2	" Number of spaces per Tab
 
" Advanced
set ruler	" Show row and column ruler information

set autochdir	" Change working directory to open buffer
 
set undolevels=1000	" Number of undo levels
set backspace=indent,eol,start	" Backspace behaviour

" Don't redraw while executing macros (good performance config)
set lazyredraw

set pastetoggle=<F2>

" Press F3 to toggle highlighting on/off, and show current value.
:noremap <F3> :set hlsearch! hlsearch?<CR>

" Enable filetype plugins
syntax on

" XDG support
if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after
set runtimepath+=$XDG_DATA_HOME/vim

set packpath^=$XDG_DATA_HOME/vim
call mkdir($XDG_DATA_HOME."/vim/spell", 'p', 0700)

set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)
set viewdir=$XDG_CACHE_HOME/vim/view     | call mkdir(&viewdir,   'p', 0700)

set viminfofile=$XDG_CACHE_HOME/vim/viminfo

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","

" Theme
hi Normal guibg=NONE ctermbg=NONE
hi NonText ctermbg=NONE guibg=NONE
hi IndentGuidesEven ctermbg=black
hi IndentGuidesOdd ctermbg=black
hi Comment cterm=italic
set t_Co=256
set background=dark

let g:indent_guides_auto_colors = 0
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1

" Shortcuts
" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Turn off arrows
noremap <silent> <Left> <NOP>
noremap <silent> <Down> <NOP>
noremap <silent> <Up> <NOP>
noremap <silent> <Right> <NOP>

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" Keep selection when moving code blocks
vnoremap < <gv
vnoremap > >gv

" Open file browser
map <Leader>e :NERDTreeToggle<CR>

" Extensions

" CtrlP
let g:ctrlp_map = '<leader>p'

autocmd BufEnter *.in set ai sw=2 ts=2 sta et fo=croql
autocmd BufEnter *.sh set ai sw=2 ts=2 sta et fo=croql
autocmd BufEnter PKGBUILD set ai sw=2 ts=2 sta et fo=croql
autocmd BufEnter *.install set ai sw=2 ts=2 sta et fo=croql
autocmd BufRead,BufNewFile *.conf setf dosini
autocmd BufRead,BufNewFile PKGBUILD setf PKGBUILD

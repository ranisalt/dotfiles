" set nocompatible
set autochdir
" set autoindent
set background=dark
" set backspace=indent,eol,start
set clipboard=unnamedplus
set colorcolumn=80
set cursorline
" set encoding=utf8
set expandtab
set fileencoding=latin1
set foldmethod=indent
set foldlevel=8
" set hlsearch
set ignorecase
" set incsearch
" set laststatus=2 " needed for airline
set magic
" set mouse=a
set noshowmode " airline already shows me
set number
set ruler
set smartcase
set smartindent
" set smarttab
set shiftwidth=4
set showcmd
set showmatch
set softtabstop=4
set tabstop=4
syntax on

filetype off
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
" extensions
Plugin 'VundleVim/Vundle.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'davidhalter/jedi-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-fugitive'
Plugin 'moll/vim-node'
Plugin 'tpope/vim-sensible'
Plugin 'tpope/vim-surround'

" colorschemes
Plugin 'sjl/badwolf'
call vundle#end()

filetype plugin indent on

" reindent file
map <silent> <C-i> gg=G'
nnoremap <silent> <Tab> <NOP>

" silently quit if no changes
map <silent> q :q<cr>

" open nerdtree navigation
map <C-e> :NERDTreeToggle<cr>

" toggle folding
nnoremap <space> za

" tab manipulation
map <C-t> :tabnew<cr>
map <C-o> :tabedit
map <C-w> :tabclose<cr>
map <C-a> :tabprevious<cr>
map <C-d> :tabnext<cr>

" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" turn off arrows
noremap <silent> <Left> <NOP>
noremap <silent> <Down> <NOP>
noremap <silent> <Up> <NOP>
noremap <silent> <Right> <NOP>
inoremap <silent> <Left> <NOP>
inoremap <silent> <Down> <NOP>
inoremap <silent> <Up> <NOP>
inoremap <silent> <Right> <NOP>
vnoremap <silent> <Left> <NOP>
vnoremap <silent> <Down> <NOP>
vnoremap <silent> <Up> <NOP>
vnoremap <silent> <Right> <NOP>

let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#tab_nr_type=1
let g:badwolf_css_props_highlight = 1
let g:badwolf_darkgutter = 1
let g:badwolf_tabline = 0

set shell=/bin/sh
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_compiler_options = '-Wall -Wpedantic -std=c++14'
let g:syntastic_javascript_checkers=['standard']
let g:syntastic_javascript_standard_exec = 'semistandard'

" remove trailing whitespace on save
au BufWritePre * :%s/\s\+$//e

" Return to last edit position when opening files (You want this!)
au BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

colorscheme badwolf
highlight NonText ctermbg=none
highlight Normal ctermbg=none
